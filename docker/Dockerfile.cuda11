# Base image for CUDA 11.7
FROM nvidia/cuda:11.7.1-cudnn8-devel-ubuntu20.04 AS cuda11

# Set up environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Budapest

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    ca-certificates \
    libjpeg-dev \
    libpng-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
RUN curl -o ~/miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipy

# Add Conda to PATH
ENV PATH=/opt/conda/bin:$PATH

# Create and activate Conda environment with Python 3.12
RUN conda create --name CtrlAltDiffuse python=3.12 && conda clean -a

# Initialize Conda in bash and ensure the environment is activated on container start
RUN echo "source /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate CtrlAltDiffuse" >> ~/.bashrc

# Install PyTorch with CUDA 11.7 support
RUN conda run -n CtrlAltDiffuse conda install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia

# Set up working directory
WORKDIR /workspace

# Copy the project files into the container
COPY . /workspace

# Install the project in editable mode using pyproject.toml
RUN pip install -e .

# Install the package dependencies from requirements.txt (if exists)
RUN if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

# Set entry point for either interactive shell or commands (training/generation)
ENTRYPOINT [ "/bin/bash", "-c" ]
CMD ["bash"]
